<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
        
    <style>
        table{
            width: 100%;
        }
        button{
            width: 100%;
            height : 100%;

        }
    </style>
</head>
<body>
    <h3>방명록</h3>
    <form name="visitorForm">
        <fieldset>
            <legend>방명록 등록</legend>
            <input type="text" id="name" placeholder="방문자 이름"/> <br/>
            <input type="text" id="comment" placeholder="방명록 작성"/> <br/>
            <button type="button" onclick="visitorFunc()">등록</button>
        </fieldset>
    </form>
    <br />
    <table border="1" cellspacing = '0'>
        <thead>
            <tr>
                <th>ID</th>
                <th>작성자</th>
                <th>내용</th>
                <th>수정</th>
                <th>삭제</th>
            </tr>
        </thead>
        <tbody>
        
        </tbody>
    </table>
    <script>
        const tbody = document.querySelector("tbody");
        // console.log(document.location);
        //페이지 열자말자 바로 실행
        (async function() {
            const [_, pathname] = document.location.pathname.split('/visitor/');
            console.log('pathname',pathname);
            let res;
            if(pathname){
                res = await axios({
                    method : "GET",
                    url : `/api/visitor/${Number(pathname)}`,
                });
                console.log(res);
            }else{
                //전체 방명록 가져오기 
                res = await axios({
                    method : "GET",
                    url : "/api/visitor",
            });
            }

            console.log(res.data.result[0]);
            for (let i = 0; i < res.data.result.length; i++){
                const html = `
                    <tr>
                        <td>${res.data.result[i].id}</td>
                        <td>${res.data.result[i].name}</td>
                        <td>${res.data.result[i].comment}</td>
                        <td><button type="button" onclick="editFunc(${res.data.result[i].id})">수정</button</td>
                        <td><button type="button" onclick="deleteFunc(${res.data.result[i].id})">삭제</button</td>
                    </tr>
                `
                //순차정렬(beforeend) / 역순정렬(afterbegin)
                tbody.insertAdjacentHTML('beforeend', html);
            }
        })()

        async function visitorFunc(){
            const form = document.forms['visitorForm'];
            console.log("fform",form)
            const res = await axios({
                method : "POST",
                url : "/api/visitor/write",
                data : {
                    name : form.name.value,
                    comment : form.comment.value
                }
            })
            console.log(res.data);
            const html = `
                <tr>
                    <td>${res.data.id}</td>
                    <td>${res.data.name}</td>
                    <td>${res.data.comment}</td>
                    <td><button type="button" onclick="editFunc(${res.data.id})">수정</button</td>
                    <td><button type="button" onclick="deleteFunc(${res.data.id})">삭제</button</td>
                </tr>
            `
            tbody.insertAdjacentHTML('beforeend', html);
        }
        async function editFunc(id){
            const form = document.forms["visitorForm"]
            const res = await axios({
                method : "PATCH",
                url : "/api/visitor/update",
                data : {
                    name : form.name.value,
                    comment : form.comment.value,
                    id : Number(id),
                }
            });
            if (res.data.result){
                document.location.reload();
            } else{
                alter("오류가 발생했나");
            }
        }
        async function deleteFunc(id){
            if(!confirm("삭제하시겠습니까??")){
                return;
            }
            const res = await axios({
                method : "DELETE",
                url : "/api/visitor/delete",    
                data : {
                    id : Number(id)
                }
            })
            if (res.data.result){
                document.location.reload();
            } else{
                alter("오류가 발생했나");
            }
        }
        

    </script>
</body>
</html>